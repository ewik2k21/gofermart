{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API server for gofermart",
        "title": "gofermartAPI",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/user/balance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the current balance for the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "balance"
                ],
                "summary": "Gets the user's balance",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved balance",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to submit a withdraw request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Post a withdraw request",
                "parameters": [
                    {
                        "description": "Withdraw Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.WithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request (Invalid JSON, validation errors)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized (Wrong user ID)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Incorrect order number format)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/filldb": {
            "post": {
                "description": "Заполняет таблицу users в базе данных указанным количеством случайных пользователей.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Заполняет базу данных случайными пользователями",
                "parameters": [
                    {
                        "description": "Количество пользователей для добавления",
                        "name": "count",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fill db",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/interfaces.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/interfaces.Response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logs in a user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/orders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all orders associated with the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "orders"
                ],
                "summary": "Gets all orders for the user",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/interfaces.OrderResponse"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new order to the user's account based on the provided order number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "orders"
                ],
                "summary": "Adds a new order for the user",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added order",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "202": {
                        "description": "Order accepted for processing",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Registers a new user account and generates a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " Message": {
                                            "type": "string"
                                        },
                                        "Code": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " Message": {
                                            "type": "string"
                                        },
                                        "Code": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " Message": {
                                            "type": "string"
                                        },
                                        "Code": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/withdraws": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all withdraws for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user withdraws",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved withdraws",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/interfaces.WithdrawsResponse"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content (No withdraws found)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized (Wrong user ID)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/interfaces.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "interfaces.OrderRequest": {
            "type": "object",
            "required": [
                "order_number"
            ],
            "properties": {
                "order_number": {
                    "type": "string"
                }
            }
        },
        "interfaces.OrderResponse": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.OrderStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "interfaces.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interfaces.UserRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "interfaces.WithdrawRequest": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "interfaces.WithdrawsResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "models.OrderStatus": {
            "type": "string",
            "enum": [
                "PROCESSING",
                "PROCESSED",
                "INVALID",
                "NEW"
            ],
            "x-enum-varnames": [
                "OrderStatusProcessing",
                "OrderStatusProcessed",
                "OrderStatusInvalid",
                "OrderStatusNew"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}